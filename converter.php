<?php
/** @file converter.php
 */ 
/**
 * @class Converter
 * @brief 
 */
class Converter_old
{
	/**
	 * @var array $ayar_array ayar rules
	 */
	private $ayar_array = array();
	/**
	 * @var array $myanmar3_array myanmar3 rules
	 */
	private $myanmar3_array = array();
	/**
	 * @var array $wininnwa_array 
	 */
	private $wininnwa_array = array();
	/**
	 * @var array $zawgyi_array 
	 */
	private $zawgyi_array = array();
	/**
	 * @var array $converted_text 
	 */
	private $converted_text;

	/**
	 * @class __construct
	 * @brief 	This is constructor class
	 * @param $source 	source encoding
	 * @param $destination 	output encoding
	 * @param $text 	source text content
	 * @returns		Converted text 
	 */
	private function __construct($source,$destination,$text)
	{
		mb_internal_encoding('UTF-8');
		/**
		 * @var $zawgyi_array 
		 */
		$this->zawgyi_array=array('before'=>array('(ေ)၀'=>'$1ဝ','၀([်ြွႊိီုဳူဴာါ္])'=>'ဝ$1','၀([က-အ])(္)'=>'ဝ$1$2','(ေ)၇'=>'$1ရ','၇([်ြွႊိီုဳူဴာါ္])'=>'ရ$1','၇([က-အ])(္)'=>'ရ$1$2','ရ်'=>'ရွ','(ေ)၈'=>'$1ဂ','၈([်ြွႊိီုဳူဴာါ္])'=>'ဂ$1','၈([က-အ])(္)'=>'ဂ$1$2','၈ၤ'=>'ဂၤ','(^ျ)([ခဂငပဓဝ])ာ'=>'$1$2ါ','([ကဃစဆဇစ်ညဋဍနပဖဗဘမယရလသဟဌဠဓ])(ြ)ါ'=>'$1$2ာ','ဧ။္'=>'၏','([း၊။])([ိီ့္ဲ])'=>'$2$1','၄​င္း'=>'၎','စ်'=>'ဈ','ဥ​ာ'=>'ဉာ​','ၾသ'=>'ဩ','ေၾသာ္'=>'ဪ','([ါ-ွ၊။ၚၽ-ႄႇ-ႉ])(\1)?(\1)'=>'$1'),'alphabet'=>array('က','ခ','ဂ','ဃ','င','စ','ဆ','ဇ','ဈ','ည','ဋ','ဌ','ဍ','ဎ','ဏ','တ','ထ','ဒ','ဓ','န','ပ','ဖ','ဗ','ဘ','မ','ယ','ရ','လ','ဝ','သ','ဟ','ဠ','အ','ၠ','ၡ','ၢ','ၣ','','ၥ','ၧ','ၨ','ၩ','','ၬ','ၭ','','','ၰ','ၲ','ၳ','ၵ','ၶ','ၷ','ၸ','ၹ','ၺ','ၻ','ၼ','','','ႅ','','','','','','၀','၁','၂','၃','၄','၅','၆','၇','၈','၉','','ေ','','ိ','ီ','','္','ၤ','ာ','ါ','ၚ','','ဲ','','ြ','ႊ','','ံ','း','','်','ျ','ၾ','ၿ','ႀ','','့','႔','႕','','၊','။','','ႏ','႐','႒','ဥ','ဧ','၏','','ႆ','၍','၌','ဤ','','ု','ူ','ဳ','ဴ','ႈ','ႉ','ွ','ႇ','','ႋ','ႌ','','','','','','','','','','','ၽ','','','','','','','ဉ','','ၪ','','ဦ','','ဣ','','','','','','','','','','၎','႗','ၮ','ၯ','','႑','','','','','','','','','','','','','','','','','','','','','','','','','','','႖','','','ၱ','ၳ','','+','-','x','/','%','(',')','[',']','?','!',',','.',"'","'",'=','','','"'),'after'=>array('([ုူွန])([္ဲ])?့'=>'$1$2႔','ရွ႔'=>'ရွ႕','([ြႊ])([ဲံ])?့'=>'$1$2႕','([ည-ဍဠဣဥ႒႗])ု'=>'$1ဳ','([ည-ဍဠဣဥ႒႗])ူ'=>'$1ဴ','([ၠ-ၣၥ-ၨၬၭၰ-ၼႅ႓႖])([ၤိီံႋႌႍႎဲ])?ု'=>'$1$2ဳ','([ၠ-ၣၥ-ၨၬၭၰ-ၼႅ႓႖])([ၤိီံႋႌႍႎဲ])?ူ'=>'$1$2ဴ','(ျ)([က-အ])([ွႇြႊ])?([ၤိီံႋႌႍႎဲ])?ု'=>'$1$2$3$4ဳ','(ျ)([က-အ])([ွႇြႊ])?([ၤိီံႋႌႍႎဲ])?ူ'=>'$1$2$3$4ဴ','(်)([ိီံ])?ု'=>'$1$2ဳ','(်)([ိီံ])?ူ'=>'$1$2ဴ','(ျ)(က-အ)ွ'=>'$1$2ႇ','ျ([က-အ])([ြႊ])([ၤိီံႋႌႍႎ])'=>'ႃ$1$2$3','ျ([က-အ])([ြႊ])'=>'ႁ$1$2','ျ([က-အ])([ၤိီံႋႌႍႎ])'=>'ၿ$1$2','ႃ([ကဃဆဏတထဘယလသဟ])'=>'ႄ$1','ႁ([ကဃဆဏတထဘယလသဟ])'=>'ႂ$1','ၿ([ကဃဆဏတထဘယလသဟ])'=>'ႀ$1','ျ([ကဃဆဏတထဘယလသဟ])'=>'ၾ$1','န([ွႇြႊ႖])'=>'ႏ$1','န([ၠ-ၣၥ-ၨၬၭၰ-ၼႅ႓႖])'=>'ႏ$1','န([ၤိီံႋႌႍႎ])?([ုဳူဴႈႉ])'=>'ႏ$1$2','([ဳဴ])႔'=>'$1႕','ရ([ိီ])?([ုူ])'=>'႐$1$2','ည([ြႊ])'=>'ၫ$1','ဉ္'=>'ဥ္'),'order'=>array("ွ","ႇ","ြ","ႊ","်","ၽ","ၤ","ိ","ီ","ံ","ႋ","ႌ","ႍ","ႎ","ဲ","ု","ဳ","ူ","ဴ","ႈ","ႉ","ာ","ါ","္","ၚ","့","႔","႕","း"));
		/**
		 * @var $ayar_array 
		 */
		$this->ayar_array = array('alphabet'=>array('က','ခ','ဂ','ဃ','င','စ','ဆ','ဇ','ဈ','ည','ဋ','ဌ','ဍ','ဎ','ဏ','တ','ထ','ဒ','ဓ','န','ပ','ဖ','ဗ','ဘ','မ','ယ','ရ','လ','ဝ','သ','ဟ','ဠ','အ','္က','္ခ','္ဂ','္ဃ','','္စ','္ဆ','္ဇ','္ဈ','','္ဋ','္ဌ','','','္ဏ','္တ','္ထ','္ဒ','္ဓ','္န','္ပ','္ဖ','္ဗ','္ဘ','္မ','','','္လ','','','','','','၀','၁','၂','၃','၄','၅','၆','၇','၈','၉','','ေ','','ိ','ီ','','်','င်္','ာ','ါ','ါ်','','ဲ','','ွ','ွှ','','ံ','း','','ျ','ြ','ြ','ြ','ြ','','့','့','့','','၊','။','','န','ရ','ဋ္ဌ','ဥ','ဧ','၏','','ဿ','၍','၌','ဤ','','ု','ူ','ု','ူ','ှု','ှူ','ှ','ှ','','ႋ','ႌ','','','','','','','','','','','ျ','','','','','','','ဉ','','ဉ','','ဦ','','ဣ','','','','','','','','','','၎င်း','ဋ္ဋ','ဍ္ဍ','ဍ္ဎ','','ဏ္ဍ','','','','','','','','','','','','','','','','','','','','','','','','','','','္တွ','','','္တ','္ထ','','+','-','x','/','%','(',')','[',']','?','!',',','.',"'","'",'=','','','"'),'order'=>array("ျ","ွ","ှ","ါ","ာ","ိ","ီ","ု","ူ","ဲ","ံ","်","္","့"));
		/**
		 * @var $myanmar3_array 
		 */
		$this->myanmar3_array = array('before'=>array('(င်္)([က-အ])'=>'$2$1','(္[က-အ][ျွှ]*)([ေြ]+)'=>'$2$1','([က-အ][ျွှ]*)([ေြ]+)'=>'$2$1','ြေ'=>'ေြ'),'alphabet'=>array('က','ခ','ဂ','ဃ','င','စ','ဆ','ဇ','ဈ','ည','ဋ','ဌ','ဍ','ဎ','ဏ','တ','ထ','ဒ','ဓ','န','ပ','ဖ','ဗ','ဘ','မ','ယ','ရ','လ','ဝ','သ','ဟ','ဠ','အ','္က','္ခ','္ဂ','္ဃ','','္စ','္ဆ','္ဇ','္ဈ','','္ဋ','္ဌ','','','္ဏ','္တ','္ထ','္ဒ','္ဓ','္န','္ပ','္ဖ','္ဗ','္ဘ','္မ','','','္လ','','','','','','၀','၁','၂','၃','၄','၅','၆','၇','၈','၉','','ေ','','ိ','ီ','','်','င်္','ာ','ါ','ါ်','','ဲ','','ွ','ွှ','','ံ','း','','ျ','ြ','ြ','ြ','ြ','','့','့','့','','၊','။','','န','ရ','ဋ္ဌ','ဥ','ဧ','၏','','ဿ','၍','၌','ဤ','','ု','ူ','ု','ူ','ှု','ှူ','ှ','ှ','','ႋ','ႌ','','','','','','','','','','','ျ','','','','','','','ဉ','','ဉ','','ဦ','','ဣ','','','','','','','','','','၎င်း','ဋ္ဋ','ဍ္ဍ','ဍ္ဎ','','ဏ္ဍ','','','','','','','','','','','','','','','','','','','','','','','','','','','္တွ','','','္တ','္ထ','','+','-','x','/','%','(',')','[',']','?','!',',','.',"'","'",'=','','','"'),'after'=>array('(ြ)([က-အ])'=>'$2$1','([ေ])([က-အ])'=>'$2$1','([က-အ][ာ-ဿ]*)(င်္)'=>'$2$1','ေ(်္[က-အ])'=>'$1ေ','ဥ([္်ာ])'=>'ဉ$1'),'order'=>array("ျ","ြ","ွ","ှ","ေ","ါ","ာ","ိ","ီ","ု","ူ","ဲ","ံ","်","္","့"));

		/**
		 * @var $text_length 
		 */
		$text_length = mb_strlen($text);
		/**
		 * @var $final_text 
		 */
		$final_text = "";
		if(isset($this->{$source.'_array'}['before']))
		{
			foreach ($this->{$source.'_array'}['before'] as $key => $value) {
				/**
				 * @var $text 
				 */
				$text = preg_replace('/'.$key.'/u', $value, $text);
			}
		}
		for($i = 0 ; $i < $text_length ; $i++)
		{
			/**
			 * @var $searchfor4 
			 */
			$searchfor4 = array_search(mb_substr($text,$i,4), $this->{$source.'_array'}['alphabet']);
			if($searchfor4 !== false)
			{
				$final_text .= $this->{$destination.'_array'}['alphabet'][$searchfor4];
				$i += 3;
			}
			else
			{
				/**
				 * @var $searchfor3 
				 */
				$searchfor3 = array_search(mb_substr($text,$i,3), $this->{$source.'_array'}['alphabet']);
				if($searchfor3 !== false)
				{
					$final_text .= $this->{$destination.'_array'}['alphabet'][$searchfor3];
					$i += 2;
				}
				else
				{
					/**
					 * @var $searchfor2 
					 */
					$searchfor2 = array_search(mb_substr($text,$i,2), $this->{$source.'_array'}['alphabet']);
					if($searchfor2 !== false)
					{
						$final_text .= $this->{$destination.'_array'}['alphabet'][$searchfor2];
						$i += 1;
					}
					else
					{
						/**
						 * @var $searchfor1 
						 */
						$searchfor1 = array_search(mb_substr($text,$i,1), $this->{$source.'_array'}['alphabet']);
						if($searchfor1 !== false)
						{
							$final_text .= $this->{$destination.'_array'}['alphabet'][$searchfor1];
						}
						else
						{
							$final_text .= mb_substr($text,$i,1);
						}
					}
				}
			}
		}

		if($destination == "zawgyi")
		{
			for($i = 0 ; $i < (sizeof($this->{$destination.'_array'}['order'])-1); $i++)
			{
				for($j = $i+1 ; $j < sizeof($this->{$destination.'_array'}['order']); $j++)
				{
					/**
					 * @var $temp_string 
					 */
					$temp_string = '('.$this->{$destination.'_array'}['order'][$j].')('.$this->{$destination.'_array'}['order'][$i].')';
					/**
					 * @var $final_text 
					 */
					$final_text = preg_replace('/'.$temp_string.'/u', '$2$1', $final_text);
				}
			}	
		}

		if(isset($this->{$destination.'_array'}['after']))
		{
			foreach ($this->{$destination.'_array'}['after'] as $key => $value) {
				/**
				 * @var $final_text 
				 */
				$final_text = preg_replace('/'.$key.'/u', $value, $final_text);
			}
		}

		if(isset($this->{$destination.'_array'}['order']))
		{
			for($i = 0 ; $i < (sizeof($this->{$destination.'_array'}['order'])-1); $i++)
			{
				for($j = $i+1 ; $j < sizeof($this->{$destination.'_array'}['order']); $j++)
				{
					/**
					 * @var $temp_string 
					 */
					$temp_string = '('.$this->{$destination.'_array'}['order'][$j].')('.$this->{$destination.'_array'}['order'][$i].')';
					/**
					 * @var $final_text 
					 */
					$final_text = preg_replace('/'.$temp_string.'/u', '$2$1', $final_text);
				}
			}
		}

		/**
		 * @var $converted_text 
		 */
		$this->converted_text=$final_text;
	}
	
	/**
	 * @fn 	getConvertedText
	 * @brief 	this function is to get converted content from public access
	 * @returns 	converted text returned
	 */
	public function getConvertedText()
	{
	  return $this->converted_text;
	}
}//end of class
